{"ast":null,"code":"var _jsxFileName = \"/Users/christiancastillo/Desktop/Drum-Machine-App/src/components/volume.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { change_volume } from '../redux/actions/volume';\nimport { VOLUME } from '../redux/actions/actionTypes';\n\nclass Volume extends React.Component {\n  constructor(props) {\n    super(props);\n    this.setVolume = this.setVolume.bind(this);\n  }\n\n  setVolume(e) {\n    console.log(e.target.value);\n    this.props.change_volume({\n      type: VOLUME,\n      volume: e.target.value\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"range\",\n      value: this.props.volume,\n      onChange: this.setVolume,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        color: 'white'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 5\n      }\n    }, \"Volume: \", this.props.volume));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    volume: state.volume\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    change_volume: state => {\n      return dispatch(change_volume(state.volume));\n    }\n  };\n};\n\nconst VolumeContainer = connect(mapStateToProps, mapDispatchToProps)(Volume);\nexport default VolumeContainer;","map":{"version":3,"sources":["/Users/christiancastillo/Desktop/Drum-Machine-App/src/components/volume.js"],"names":["React","connect","change_volume","VOLUME","Volume","Component","constructor","props","setVolume","bind","e","console","log","target","value","type","volume","render","color","mapStateToProps","state","mapDispatchToProps","dispatch","VolumeContainer"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AAEA,SAAQC,aAAR,QAA4B,yBAA5B;AACA,SAAQC,MAAR,QAAqB,8BAArB;;AAEA,MAAMC,MAAN,SAAqBJ,KAAK,CAACK,SAA3B,CAAqC;AAEpCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;AACA,SAAKC,SAAL,GAAiB,KAAKA,SAAL,CAAeC,IAAf,CAAoB,IAApB,CAAjB;AACA;;AAEDD,EAAAA,SAAS,CAACE,CAAD,EAAI;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,MAAF,CAASC,KAArB;AACA,SAAKP,KAAL,CAAWL,aAAX,CAAyB;AAACa,MAAAA,IAAI,EAAEZ,MAAP;AAAea,MAAAA,MAAM,EAAEN,CAAC,CAACG,MAAF,CAASC;AAAhC,KAAzB;AACA;;AAEDG,EAAAA,MAAM,GAAG;AACR,wBACC,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC;AACC,MAAA,IAAI,EAAC,OADN;AAEC,MAAA,KAAK,EAAE,KAAKV,KAAL,CAAWS,MAFnB;AAGC,MAAA,QAAQ,EAAE,KAAKR,SAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,eAOC;AAAG,MAAA,KAAK,EAAE;AAACU,QAAAA,KAAK,EAAE;AAAR,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAqC,KAAKX,KAAL,CAAWS,MAAhD,CAPD,CADD;AAWA;;AAxBmC;;AA4BrC,MAAMG,eAAe,GAAIC,KAAD,IAAW;AAClC,SAAO;AACNJ,IAAAA,MAAM,EAAEI,KAAK,CAACJ;AADR,GAAP;AAGA,CAJD;;AAMA,MAAMK,kBAAkB,GAAIC,QAAD,IAAc;AACxC,SAAO;AACNpB,IAAAA,aAAa,EAAGkB,KAAD,IAAW;AACzB,aAAOE,QAAQ,CAACpB,aAAa,CAACkB,KAAK,CAACJ,MAAP,CAAd,CAAf;AACA;AAHK,GAAP;AAKA,CAND;;AAQA,MAAMO,eAAe,GAAGtB,OAAO,CAACkB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CjB,MAA7C,CAAxB;AAGA,eAAemB,eAAf","sourcesContent":["import React from 'react'\nimport {connect} from 'react-redux';\n\nimport {change_volume} from '../redux/actions/volume';\nimport {VOLUME} from '../redux/actions/actionTypes';\n\nclass Volume extends React.Component {\n\t\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.setVolume = this.setVolume.bind(this); \n\t}\n\n\tsetVolume(e) {\n\t\tconsole.log(e.target.value);\n\t\tthis.props.change_volume({type: VOLUME, volume: e.target.value});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<input \n\t\t\t\t\ttype=\"range\" \n\t\t\t\t\tvalue={this.props.volume}\n\t\t\t\t\tonChange={this.setVolume}\n\t\t\t\t/>\n\n\t\t\t\t<p style={{color: 'white'}}>Volume: {this.props.volume}</p>\n\t\t\t</React.Fragment>\n\t\t)\n\t}\n}\n\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tvolume: state.volume\n\t}\n}\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\tchange_volume: (state) => {\n\t\t\treturn dispatch(change_volume(state.volume));\n\t\t}\n\t};\n};\n\nconst VolumeContainer = connect(mapStateToProps, mapDispatchToProps)(Volume);\n\n\nexport default VolumeContainer;"]},"metadata":{},"sourceType":"module"}